
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'DO FLOAT RETURN GOTO INT AUTO VOID ENUM WHILE ELSE BREAK STATIC SIGNED EXTERN SIZEOF IF CASE CHAR TYPEDEF SHORT CONST STRUCT FOR DEFAULT DOUBLE REGISTER UNSIGNED LONG UNION SWITCH CONTINUE VOLATILE ELLIPSIS RIGHT_ASSIGN LEFT_ASSIGN ADD_ASIGN SUB_ASSIGN MUL_ASSIGN DIV_ASSIGN MOD_ASSIGN AND_ASSIGN XOR_ASSIGN OR_ASSIGN RIGHT_OP LEFT_OP INC_OP DEC_OP PTR_OP AND_OP OP_OP LE_OP GE_OP EQ_OP NE_OP SEMICOLON OPEN_CURLY CLOSE_CURLY COMMA COLON EQUAL OPEN_PAR CLOSE_PAR OPEN_SQUARE CLOSE_SQUARE DOT AND EXCLAIM NOT MINUS PLUS MUL DIVIDE MOD LESS_THAN GREATER_THAN XOR OR COND_OP ID SCONST CONSTANTstatement : ID EQUAL expressionstatement : expressionexpression : OPEN_PAR expression CLOSE_PARexpression : CONSTANTexpression : ID'
    
_lr_action_items = {'OPEN_PAR':([0,1,8,],[1,1,1,]),'CONSTANT':([0,1,8,],[2,2,2,]),'EQUAL':([5,],[8,]),'CLOSE_PAR':([2,6,7,9,],[-4,9,-5,-3,]),'ID':([0,1,8,],[5,7,7,]),'$end':([2,3,4,5,7,9,10,],[-4,0,-2,-5,-5,-3,-1,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,1,8,],[4,6,10,]),'statement':([0,],[3,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> ID EQUAL expression','statement',3,'p_statement_assign','cparser.py',11),
  ('statement -> expression','statement',1,'p_statement_expr','cparser.py',15),
  ('expression -> OPEN_PAR expression CLOSE_PAR','expression',3,'p_expression_group','cparser.py',30),
  ('expression -> CONSTANT','expression',1,'p_expression_number','cparser.py',34),
  ('expression -> ID','expression',1,'p_expression_name','cparser.py',38),
]
